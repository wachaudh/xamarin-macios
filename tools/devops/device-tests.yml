# Xamarin
# Run Device Tests

variables:
  poolName: 'VSEng-Xamarin-Mac-Devices'

resources:
  repositories:
  - repository: maccore
    type: github
    name: xamarin/maccore
    ref: refs/heads/device-tests-yaml
    endpoint: xamarin

jobs:
- job: macOS
  displayName: Run Device Tests
  timeoutInMinutes: 1000

  pool:
    name: '$(poolName)'

  steps:
  - checkout: self
  - checkout: maccore
    persistCredentials: true

  - bash: ./xamarin-macios/tools/devops/system-info.sh
    displayName: System info

  - bash: cd xamarin-macios && ./configure --enable-xamarin
    displayName: 'Enable Xamarin'

  - bash: |
      set -x
      set -e

      rm -f ~/Library/Caches/com.xamarin.provisionator/Provisions/*p12
      rm -f ~/Library/Caches/com.xamarin.provisionator/Provisions/*mobileprovision

      ./maccore/tools/install-qa-provisioning-profiles.sh -v
    displayName: 'Add provisioning profiles'
    env:
      LOGIN_KEYCHAIN_PASSWORD: $(OSX_KEYCHAIN_PASS)

  - bash: |
      set -x
      set -e

      CONFIGURE_ARGS="--provision-xcode --provision-xamarin-studio --provision-mono --ignore-osx --ignore-autotools --ignore-cmake"
      if grep ignore-7z xamarin-macios/system-dependencies.sh 2>&1 > /dev/null; then
         CONFIGURE_ARGS="$CONFIGURE_ARGS --provision-7z"
      fi
      if grep ignore-python3 xamarin-macios/system-dependencies.sh 2>&1 > /dev/null; then
         CONFIGURE_ARGS="$CONFIGURE_ARGS --ignore-python3"
      fi
      ./xamarin-macios/system-dependencies.sh $CONFIGURE_ARGS
    displayName: 'Provision dependencies'
    timeoutInMinutes: 240

  - bash: ./xamarin-macios/tools/devops/install-xi-pkg.sh
    displayName: 'Install XI PKG'
    timeoutInMinutes: 15

  - bash: |
      set -x
      set +e # Don't care about errors here

      pkill -9 mlaunch
      pkill -9 -f mono.*xharness.exe
      pkill -9 -f ssh.*rsync.*xamarin-storage

      exit 0
    displayName: 'Process cleanup'

  - bash: |
      security set-key-partition-list -S apple-tool:,apple: -s -k $(OSX_KEYCHAIN_PASS) login.keychain
    displayName: 'Remove security UI-prompt (http://stackoverflow.com/a/40039594/183422)'
    condition: succeededOrFailed()

  - bash: |
      set -e
      set -x
      echo 1234567890 > ~/.mlaunch-verbosity
    displayName: 'Make mlaunch verbose'

  - bash: |
      set -e
      set -x
      sudo launchctl stop com.apple.usbmuxd
    displayName: 'Fix device discovery (reset launchctl)'

###
### Tell GitHub we're starting working on this commit
###

  - bash: ./xamarin-macios/jenkins/vsts-device-tests-set-status.sh --start "--token=$(GitHub.Token)" "--device=iOS-DDFun"
    displayName: Set pending GitHub status
    continueOnError: true
    condition: succeededOrFailed()

###
### Run the device tests
###

  - bash: ./xamarin-macios/tools/devops/run-tests.sh
    displayName: 'Run tests'
    timeoutInMinutes: 600

###
### Report final results to GitHub
###

  - bash: ./xamarin-macios/jenkins/vsts-device-tests-set-status.sh "--token=$(GitHub.Token)" "--device=iOS-DDFun"
    displayName: Report results to GitHub as comment / status
    continueOnError: true
    condition: succeededOrFailed()

  - bash: ./xamarin-macios/tools/devops/add-summaries.sh
    displayName: 'Add summaries'
    continueOnError: true
    condition: succeededOrFailed()

  - task: ArchiveFiles@1
    displayName: 'Archive HtmlReport'
    inputs:
      rootFolder: 'xamarin-macios/jenkins-results'
      includeRootFolder: false
      archiveFile: '$(Build.ArtifactStagingDirectory)/HtmlReport-$(Build.BuildId).zip'
    continueOnError: true
    condition: succeededOrFailed()

###
### Push the HTML report to Azure DevOps (shows up in Summary tab as Build Artifact)
###

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: HtmlReport'
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)/HtmlReport-$(Build.BuildId).zip'
      artifactName: HtmlReport
    continueOnError: true
    condition: succeededOrFailed()
