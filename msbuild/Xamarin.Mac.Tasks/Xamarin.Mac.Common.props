<!--
***********************************************************************************************
Xamarin.Mac.Common.props

WARNING:  DO NOT MODIFY this file unless you are knowledgeable about MSBuild and have
  created a backup copy.  Incorrect changes to this file will make it
  impossible to load or build your projects from the command-line or the IDE.

This file defines default properties for iOS projects.

Copyright (C) 2013-2014 Xamarin. All rights reserved.
***********************************************************************************************
-->

<!-- Unlike Xamarin.Mac.Common.targets, which is not shared by the ObjC Bindings targets (yet), 
     Xamarin.Mac.Common.props is shared and truely common. -->
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

	<Import Project="$(MSBuildThisFileDirectory)$(MSBuildThisFileName).Before.props"
			Condition="Exists('$(MSBuildThisFileDirectory)$(MSBuildThisFileName).Before.props')"/>

	<!-- This is used to determine whether Xamarin.Mac.Common.targets needs to import
         Xamarin.Mac.Common.props itself, or whether it has been imported previously,
         e.g. by the project itself. -->
	<PropertyGroup>
		<_XamarinCommonPropsHasBeenImported>true</_XamarinCommonPropsHasBeenImported>
	</PropertyGroup>


	<!-- Story-time! MigrateToNewXMIdentifier is special because it un-does a lie we started telling from the 
	beginning of Full (called Xamarin.Mac 4.5 back then). Back then, we released Modern (called Mobile) and 
	when many customers upgraded from Classic they broke in terrible ways as none of their nugets worked. 
	No nugets in the wild had heard of the Xamarin.Mac TFI and thus didn't support it. To "fix" this use case,
	we created Full (XM 4.5) and _lied_ with our TFI claiming to be .NETFramework. Well we were close enough
	for a vast majority of packages to work. However, this made creating Full specific package flavors impossible.
	Now that we're getting "real" nuget support, we need to stop lying without breaking the world. We're starting by
	allowing "opt-in" MigrateToNewXMIdentifier which will swap your declared TFI to the new hotness.
	-->
	<PropertyGroup Condition=" '$(MigrateToNewXMIdentifier)' == 'true' And '$(TargetFrameworkIdentifier)' != 'Xamarin.Mac' And '$(UseXamMacFullFramework)' == 'true' ">
		<TargetFrameworkIdentifier>Xamarin.Mac.NET</TargetFrameworkIdentifier>
	</PropertyGroup>

	<PropertyGroup>
		<!-- Opt-in to filter out assemblies denied loading by mono, to avoid bundling them.
		     This should only be for non-Modern profiles, since people who are recompiling for
		     Modern aren't shipping windows bits.
		     -->
		<FilterDeniedAssemblies Condition="'$(TargetFrameworkIdentifier)' != 'Xamarin.Mac'">true</FilterDeniedAssemblies>
	</PropertyGroup>

	<!-- When looking for related files to copy, look for Mono debugging files as well -->
	<PropertyGroup>
		<AllowedReferenceRelatedFileExtensions>
			$(AllowedReferenceRelatedFileExtensions);
			.dll.mdb;
			.exe.mdb;
			.pdb
		</AllowedReferenceRelatedFileExtensions>
	</PropertyGroup>

	<PropertyGroup>
		<EnableCodeSigning Condition="'$(EnableCodeSigning)' == ''">false</EnableCodeSigning>
		<CodeSigningKey Condition="'$(CodeSigningKey)' == ''"></CodeSigningKey>
		<CodeSignProvision Condition="'$(CodeSignProvision)' == ''"></CodeSignProvision>
		<CodeSignEntitlements Condition="'$(CodeSignEntitlements)' == ''"></CodeSignEntitlements>
		<CodeSignResourceRules Condition="'$(CodeSignResourceRules)' == ''"></CodeSignResourceRules>
		<CodeSignExtraArgs Condition="'$(CodeSignExtraArgs)' == ''"></CodeSignExtraArgs>
		<CreatePackage Condition="'$(CreatePackage)' == ''">false</CreatePackage>
		<HttpClientHandler Condition="'$(HttpClientHandler)' == ''">HttpClientHandler</HttpClientHandler>
		<EnablePackageSigning Condition="'$(EnablePackageSigning)' == ''">false</EnablePackageSigning>
		<PackageSigningKey Condition="'$(PackageSigningKey)' == ''"></PackageSigningKey>
		<ProductDefinition Condition="'$(ProductDefinition)' == ''"></ProductDefinition>
		<PackagingExtraArgs Condition="'$(PackagingExtraArgs)' == ''"></PackagingExtraArgs>
		<I18n Condition="'$(I18n)' == ''"></I18n>
		<IncludeMonoRuntime Condition="'$(IncludeMonoRuntime)' == ''">true</IncludeMonoRuntime>
		<MonoBundlingExtraArgs Condition="'$(MonoBundlingExtraArgs)' == ''"></MonoBundlingExtraArgs>
		<LinkMode Condition="'$(LinkMode)' == ''">None</LinkMode>
		<XamMacArch Condition="'$(XamMacArch)' == ''">x86_64</XamMacArch>
		<MonoMacResourcePrefix Condition="'$(MonoMacResourcePrefix)' == ''">Resources</MonoMacResourcePrefix>
		<XamMacResourcePrefix Condition="'$(XamMacResourcePrefix)' == ''">$(MonoMacResourcePrefix)</XamMacResourcePrefix>
		<IsAppExtension Condition="'$(IsAppExtension)' == ''">False</IsAppExtension>
		<EnableSGenConc Condition="'$(EnableSGenConc)' == ''">false</EnableSGenConc>
		<AotScope Condition="'$(AotScope)' == ''">None</AotScope>
		<ArchiveOnBuild Condition="'$(ArchiveOnBuild)' == ''">False</ArchiveOnBuild>
	</PropertyGroup>

	<PropertyGroup>
		<IsMacEnabled>true</IsMacEnabled>
	</PropertyGroup>

	<PropertyGroup Condition="'$(XamarinMacFrameworkRoot)' == ''">
		<XamarinMacFrameworkRoot>/Library/Frameworks/Xamarin.Mac.framework/Versions/Current</XamarinMacFrameworkRoot>
	</PropertyGroup>

	<Choose>
		<When Condition=" '$(TargetFrameworkIdentifier)' == 'Xamarin.Mac'">
			<PropertyGroup>
				<TargetFrameworkName>Modern</TargetFrameworkName>
				<MacBclPath>$(XamarinMacFrameworkRoot)/lib/mono/Xamarin.Mac</MacBclPath>
			</PropertyGroup>
		</When>
		<When Condition=" '$(TargetFrameworkIdentifier)' != 'Xamarin.Mac' And '$(UseXamMacFullFramework)' == 'true'">
			<PropertyGroup>
				<TargetFrameworkName>Full</TargetFrameworkName>
				<MacBclPath>$(XamarinMacFrameworkRoot)/lib/mono/4.5</MacBclPath>
			</PropertyGroup>
		</When>
		<Otherwise>
			<PropertyGroup>
				<TargetFrameworkName>System</TargetFrameworkName>
				<MacBclPath>$(XamarinMacFrameworkRoot)/lib/mono/4.5</MacBclPath>
			</PropertyGroup>
		</Otherwise>
	</Choose>

	<PropertyGroup Condition="'$(TargetFrameworkName)' == 'Full'">
		<AssemblySearchPaths>$(XamarinMacFrameworkRoot)/lib/reference/full;$(XamarinMacFrameworkRoot)/lib/mono;$(AssemblySearchPaths)</AssemblySearchPaths>
		<ImplicitlyExpandNETStandardFacades>False</ImplicitlyExpandNETStandardFacades>
	</PropertyGroup>

	<!-- Do not resolve from the GAC in Modern or Full unless allow-unsafe-gac-resolution is passed in -->
	<PropertyGroup Condition="'$(TargetFrameworkName)' != 'System' And !$(MonoBundlingExtraArgs.Contains('--allow-unsafe-gac-resolution'))" >
		<AssemblySearchPaths>$([System.String]::Copy('$(AssemblySearchPaths)').Replace('{GAC}',''))</AssemblySearchPaths>
		<AssemblySearchPaths Condition="'$(MSBuildRuntimeVersion)' != ''">$(AssemblySearchPaths.Split(';'))</AssemblySearchPaths>
	</PropertyGroup>

	<Import Project="$(MSBuildThisFileDirectory)$(MSBuildThisFileName).After.props"
			Condition="Exists('$(MSBuildThisFileDirectory)$(MSBuildThisFileName).After.props')"/>

</Project>
